{"version":3,"sources":["covervid.js"],"names":["coverVid","elem","width","height","onElementResize","undefined","document","addEventListener","sizeVideo","addRatioWatcher","window","onresize","throttle","style","position","top","left","transform","parentNode","overflow","fn","threshhold","scope","last","deferTimer","context","now","Date","args","arguments","clearTimeout","setTimeout","apply","parentHeight","offsetHeight","parentWidth","offsetWidth","nativeWidth","nativeHeight","heightScaleFactor","widthScaleFactor","frequency","last_height","last_width","new_width","new_height","id","setInterval"],"mappings":";;;;;;;;kBAAwBA,Q;AAAT,SAASA,QAAT,CAAkBC,IAAlB,EAAwBC,KAAxB,EAA+BC,MAA/B,EAAuCC,eAAvC,EAAwD;AACtE;AACA,KAAI,QAAOA,eAAP,yCAAOA,eAAP,OAA4BC,SAAhC,EAA2C;AAC1CD,oBAAkB,KAAlB;AACA;;AAED;AACAE,UAASC,gBAAT,CAA0B,kBAA1B,EAA8CC,SAA9C;;AAEA;AACA,KAAIJ,eAAJ,EAAqB;AACpBK,kBAAgBR,IAAhB,EAAsB,GAAtB;AACA,EAFD,MAEO;AACN;AACAS,SAAOC,QAAP,GAAkB,YAAY;AAC7BC,YAASJ,WAAT,EAAsB,EAAtB;AACA,GAFD;AAGA;;AAED;AACAP,MAAKY,KAAL,CAAWC,QAAX,GAAsB,UAAtB;AACAb,MAAKY,KAAL,CAAWE,GAAX,GAAiB,KAAjB;AACAd,MAAKY,KAAL,CAAWG,IAAX,GAAkB,KAAlB;AACAf,MAAKY,KAAL,CAAW,mBAAX,IAAkC,uBAAlC;AACAZ,MAAKY,KAAL,CAAW,eAAX,IAA8B,uBAA9B;AACAZ,MAAKY,KAAL,CAAWI,SAAX,GAAuB,uBAAvB;;AAEA;AACAhB,MAAKiB,UAAL,CAAgBL,KAAhB,CAAsBM,QAAtB,GAAiC,QAAjC;;AAEA;AACA,UAASP,QAAT,CAAkBQ,EAAlB,EAAsBC,UAAtB,EAAkCC,KAAlC,EAAyC;AACvC,MAAGD,eAAehB,SAAlB,EAA6B;AAC3BgB,gBAAa,GAAb;AACD;AACD,MAAIE,IAAJ,EACIC,UADJ;AAEA,SAAO,YAAY;AACjB,OAAIC,UAAUH,SAAS,IAAvB;;AAEA,OAAII,MAAM,CAAC,IAAIC,IAAJ,EAAX;AAAA,OACIC,OAAOC,SADX;AAEA,OAAIN,QAAQG,MAAMH,OAAOF,UAAzB,EAAqC;AACnC;AACAS,iBAAaN,UAAb;AACAA,iBAAaO,WAAW,YAAY;AAClCR,YAAOG,GAAP;AACAN,QAAGY,KAAH,CAASP,OAAT,EAAkBG,IAAlB;AACD,KAHY,EAGVP,UAHU,CAAb;AAID,IAPD,MAOO;AACLE,WAAOG,GAAP;AACAN,OAAGY,KAAH,CAASP,OAAT,EAAkBG,IAAlB;AACD;AACF,GAhBD;AAiBD;;AAED;AACA,UAASpB,SAAT,GAAqB;AACpB;AACA,MAAIyB,eAAehC,KAAKiB,UAAL,CAAgBgB,YAAnC;AACA,MAAIC,cAAclC,KAAKiB,UAAL,CAAgBkB,WAAlC;;AAEA;AACA,MAAIC,cAAcnC,KAAlB;AACA,MAAIoC,eAAenC,MAAnB;;AAEA;AACA,MAAIoC,oBAAoBN,eAAeK,YAAvC;AACA,MAAIE,mBAAmBL,cAAcE,WAArC;;AAEA;AACA,MAAIG,mBAAmBD,iBAAvB,EAA0C;AACzCtC,QAAKY,KAAL,CAAWV,MAAX,GAAoB,MAApB;AACAF,QAAKY,KAAL,CAAWX,KAAX,GAAmBiC,cAAY,IAA/B;AACA,GAHD,MAGO;AACNlC,QAAKY,KAAL,CAAWV,MAAX,GAAoB8B,eAAa,IAAjC;AACAhC,QAAKY,KAAL,CAAWX,KAAX,GAAmB,MAAnB;AACA;AACD;;AAED;;;;;;AAMA,UAASO,eAAT,CAAyBR,IAAzB,EAA+BwC,SAA/B,EAA0C;AACzC;AACA,MAAIC,cAAc,CAAlB;AAAA,MACEC,aAAa,CADf;AAAA,MAEEC,YAAY3C,KAAKiB,UAAL,CAAgBkB,WAF9B;AAAA,MAGES,aAAa5C,KAAKiB,UAAL,CAAgBgB,YAH/B;AAIA,MAAIY,KAAKpC,OAAOqC,WAAP,CAAmB,YAAW;AACtC;AACAH,eAAY3C,KAAKiB,UAAL,CAAgBkB,WAA5B;AACAS,gBAAa5C,KAAKiB,UAAL,CAAgBgB,YAA7B;AACA;AACA,OAAIU,cAAcD,UAAd,IAA4BE,eAAeH,WAA/C,EAA4D;AAC3DlC;AACAkC,kBAAcG,UAAd;AACAF,iBAAaC,SAAb;AACA;AACD,GAVQ,EAUNH,SAVM,CAAT;AAWA;AAED","file":"covervid.min.js","sourcesContent":["export default function coverVid(elem, width, height, onElementResize) {\n\t// Set default arguments if not passed.\n\tif (typeof(onElementResize) === undefined) {\n\t\tonElementResize = false;\n\t}\n\n\t// Call sizeVideo on load.\n\tdocument.addEventListener('DOMContentLoaded', sizeVideo);\n\n\t// Call sizeVideo on \"element resize\" if turned on.\n\tif (onElementResize) {\n\t\taddRatioWatcher(elem, 350);\n\t} else {\n\t\t//Default to calling sizeVideo on resize.\n\t\twindow.onresize = function () {\n\t\t\tthrottle(sizeVideo(), 50);\n\t\t};\n\t}\n\n\t// Set necessary styles to position video \"like cover\".\n\telem.style.position = 'absolute';\n\telem.style.top = '50%';\n\telem.style.left = '50%';\n\telem.style['-webkit-transform'] = 'translate(-50%, -50%)';\n\telem.style['-ms-transform'] = 'translate(-50%, -50%)';\n\telem.style.transform = 'translate(-50%, -50%)';\n\n\t// Set overflow hidden on parent element.\n\telem.parentNode.style.overflow = 'hidden';\n\n\t// Throttle for resize function.\n\tfunction throttle(fn, threshhold, scope) {\n\t  if(threshhold === undefined) {\n\t    threshhold = 250;\n\t  }\n\t  var last,\n\t      deferTimer;\n\t  return function () {\n\t    var context = scope || this;\n\n\t    var now = +new Date(),\n\t        args = arguments;\n\t    if (last && now < last + threshhold) {\n\t      // hold on to it\n\t      clearTimeout(deferTimer);\n\t      deferTimer = setTimeout(function () {\n\t        last = now;\n\t        fn.apply(context, args);\n\t      }, threshhold);\n\t    } else {\n\t      last = now;\n\t      fn.apply(context, args);\n\t    }\n\t  };\n\t}\n\n\t// Define the attached selector.\n\tfunction sizeVideo() {\n\t\t// Get parent element height and width.\n\t\tvar parentHeight = elem.parentNode.offsetHeight;\n\t\tvar parentWidth = elem.parentNode.offsetWidth;\n\n\t\t// Get native video width and height.\n\t\tvar nativeWidth = width;\n\t\tvar nativeHeight = height;\n\n\t\t// Get the scale factors.\n\t\tvar heightScaleFactor = parentHeight / nativeHeight;\n\t\tvar widthScaleFactor = parentWidth / nativeWidth;\n\n\t\t// Based on highest scale factor set width and height.\n\t\tif (widthScaleFactor > heightScaleFactor) {\n\t\t\telem.style.height = 'auto';\n\t\t\telem.style.width = parentWidth+'px';\n\t\t} else {\n\t\t\telem.style.height = parentHeight+'px';\n\t\t\telem.style.width = 'auto';\n\t\t}\n\t}\n\n\t/**\n\t * Attaches a seasonally triggered watcher\n\t * to the element that wraps the video. If\n\t * the outer width / height changes it\n\t * triggers the video resizing.\n\t */\n\tfunction addRatioWatcher(elem, frequency) {\n\t\t// Initial measurements.\n\t\tvar last_height = 0,\n\t\t\t\tlast_width = 0,\n\t\t\t\tnew_width = elem.parentNode.offsetWidth,\n\t\t\t\tnew_height = elem.parentNode.offsetHeight;\n\t\tvar id = window.setInterval(function() {\n\t\t\t// Update widths & heights.\n\t\t\tnew_width = elem.parentNode.offsetWidth;\n\t\t\tnew_height = elem.parentNode.offsetHeight;\n\t\t\t// Check if we need to resize video.\n\t\t\tif (new_width !== last_width || new_height !== last_height) {\n\t\t\t\tsizeVideo();\n\t\t\t\tlast_height = new_height;\n\t\t\t\tlast_width = new_width;\n\t\t\t}\n\t\t}, frequency);\n\t}\t\n\n};"]}